class BoardManager{static size;static board_node;static board_img_node;static setup(){this.board_node=document.getElementById("board"),this.board_img_node=document.getElementById("board-img"),this.setupBoard(),this.setSize()}static setSize(){this.size=Math.min(window.innerWidth,window.innerHeight),window.innerWidth>=window.innerHeight?document.body.className="horizontal":document.body.className="vertical",this.board_node.style.width=.8*this.size+"px",this.board_node.style.height=.8*this.size+"px"}static setupBoard(){this.board_img_node.src=ImgManager.getImg("background");for(const e in Data.chessMap)this.createChess(e)}static createChess(e){const t=document.createElement("div");t.id=e,t.classList.add("chess");const a=document.createElement("img");a.id=e+"-img",a.src=Data.chessMap[e].img,a.alt=e,t.appendChild(a),this.board_node.appendChild(t),t.style.left=12.5*(Data.chessMap[e].x-1)+"%",t.style.top=12.5*(Data.chessMap[e].y-1)+"%"}}document.addEventListener("DOMContentLoaded",(()=>ImgManager.loadImgs(BoardManager.setup.bind(BoardManager)))),window.addEventListener("resize",BoardManager.setSize.bind(BoardManager));